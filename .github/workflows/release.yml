name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    environment: Production
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.4
        with:
          sdk: 3.0.3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          scope: '@mytiki'

      - name: Install Dart dependencies
        run: dart pub get

      - name: Install JS dependencies
        run: npm ci

      - name: Build Dist
        run: npm run build

      - name: Get version
        id: version
        run: echo "current=$(npm pkg get version | tr -d '"')" >> $GITHUB_OUTPUT

      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build Docs
        run: npx typedoc src/index.ts

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.current }}
